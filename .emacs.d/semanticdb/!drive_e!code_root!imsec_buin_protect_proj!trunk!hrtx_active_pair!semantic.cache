;; Object hrtx_active_pair/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "hrtx_active_pair/"
  :tables
  (list
    (semanticdb-table "hrtx_active_pair_api.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("hash_template.h" include nil nil [1 27])
            ("hrtx_active_pair_api.h" include nil nil [28 61])
            ("HRTX_UIN_PAIR_SHM_KEY" variable (:constant-flag t) nil [71 92])
            ("HRTX_UIN_PAIR_SHM_LENGTH" variable (:constant-flag t) nil [111 135])
            ("HRTX_UIN_PAIR_SHM_TIME" variable (:constant-flag t) nil [152 174])
            ("HrtxUinPair" type
               (:members 
                  ( ("qwUinPair" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [220 239]))                  
                :type "struct")
                nil [195 268])
            ("HrtxUinPairTable" type
               (:typedef ("CHashTable" type
                     (:template-specifier 
                        ( ("HrtxUinPair" type nil nil nil)
                          ("uint64_t" type nil nil nil)
                          ("4000000")
                          ("30"))                        
                      :type "class")
                      nil nil)
                :type "typedef")
                nil [284 393])
            ("g_stTable" variable
               (:typemodifiers ("static")
                :type ("HrtxUinPairTable" type (:type "class") nil nil))
                nil [394 428])
            ("g_bIsInited" variable
               (:typemodifiers ("static")
                :default-value "false"
                :type "bool")
                nil [429 461])
            ("HrtxActivePair_Init" function (:type "int") nil [463 713])
            ("HrtxActivePair_Check" function
               (:arguments 
                  ( ("dwHrtxUin" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [741 760])
                    ("dwTouin" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [761 778]))                  
                :type "bool")
                nil [715 1083])
            ("HrtxActivePair_Set" function
               (:arguments 
                  ( ("dwHrtxUin" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1108 1127])
                    ("dwTouin" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1128 1145]))                  
                :type "int")
                nil [1085 1548])
            ("HrtxActivePair_Clear" function
               (:arguments 
                  ( ("dwHrtxUin" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1575 1594])
                    ("dwTouin" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1595 1612]))                  
                :type "int")
                nil [1550 1910])
            ("HrtxActivePair_ClearAll" function (:type "int") nil [1912 2035])
            ("HrtxActivePair_GetCount" function (:type ("uint32_t" type (:type "class") nil nil)) nil [2037 2509]))          
      :file "hrtx_active_pair_api.cpp"
      :pointmax 2510
      :fsize 2509
      :lastmodtime '(23135 4904 0 0)
      :unmatched-syntax '((semantic-list 281 . 283) (symbol 277 . 281) (symbol 270 . 276) (punctuation 269 . 270) (semantic-list 191 . 194) (symbol 187 . 191) (number 192 . 193) (symbol 180 . 186) (number 192 . 193) (punctuation 179 . 180))
      :lexical-table 
        '(("HRTX_UIN_PAIR_SHM_KEY" . ((number "0x2700404" 93 . 102)))
          ("HRTX_UIN_PAIR_SHM_TIME" . ((number "30" 175 . 177)))
          ("HRTX_UIN_PAIR_SHM_LENGTH" . ((number "4000000" 136 . 143)))
          )
)
    (semanticdb-table "hrtx_active_pair_api.h"
      :file "hrtx_active_pair_api.h"
      :fsize 390
      :lastmodtime '(23135 4905 0 0)))
  :file "!drive_e!code_root!imsec_buin_protect_proj!trunk!hrtx_active_pair!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
